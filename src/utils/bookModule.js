const supabase = require('./supabaseClient');

async function handleBooking(ctx, adminChatId, adminAssistantChatId) {
  try {
    ctx.answerCbQuery('‚úÖ –í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –∞–≤—Ç–æ, —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è');
    ctx.editMessageCaption('‚úÖ –í—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –∞–≤—Ç–æ, —Å –≤–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è', {
      parse_mode: 'Markdown',
    });

    ctx.reply("–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –¥–æ–º–æ–π, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É", {
      reply_markup: {
        inline_keyboard: [[
          { text: 'üè† –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'go_to_main' }
        ]]
      }
    });

    const userId = ctx.from.id;
    const userName = ctx.from.username ? ctx.from.username : '–ë–µ–∑ –∏–º–µ–Ω–∏';
    const userLink = `[${userName}](tg://user?id=${userId})`;

    const carCaption = ctx.callbackQuery.message.caption;

    // –ù–∞–π—Ç–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—å –ø–æ –∏–º–µ–Ω–∏ –≤ caption
    const { data: cars, error: findError } = await supabase
      .from('cars')
      .select('*')
      .eq('is_available', true);

    if (findError) {
      console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –∞–≤—Ç–æ–º–æ–±–∏–ª—è:', findError);
      return;
    }

    const car = cars.find(c => carCaption.includes(c.name));

    if (car) {
      // –°–æ–∑–¥–∞—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
      const { error: bookingError } = await supabase
        .from('bookings')
        .insert({
          car_id: car.id,
          user_id: userId,
          user_name: userName
        });

      if (bookingError) {
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:', bookingError);
        return;
      }

      // –ü–æ–º–µ—Ç–∏—Ç—å –∞–≤—Ç–æ–º–æ–±–∏–ª—å –∫–∞–∫ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–π
      const { error: updateError } = await supabase
        .from('cars')
        .update({ is_available: false })
        .eq('id', car.id);

      if (updateError) {
        console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∞–≤—Ç–æ–º–æ–±–∏–ª—è:', updateError);
      }
    }

    ctx.telegram.sendMessage(adminChatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userLink} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –∞–≤—Ç–æ–º–æ–±–∏–ª—å:\n${carCaption}`, {
      parse_mode: 'Markdown'
    });
    ctx.telegram.sendMessage(adminAssistantChatId, `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userLink} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª –∞–≤—Ç–æ–º–æ–±–∏–ª—å:\n${carCaption}`, {
      parse_mode: 'Markdown'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤ handleBooking:', error);
  }
}

module.exports = { handleBooking };
